Model Requisitos ; using components.EngineIgnitionDeviceCP ; package SysADL.types { value type Int { } value type Boolean { } value type String { } value type Void { } value type Real { } value type Temperature { dimension = Temperature } unit Celsius dimension Temperature value type CelsiusTemperature extends Temperature { unit = Celsius dimension = Temperature } value type FahrenheitTemperature extends Temperature { unit = Fahrenheit dimension = Temperature } unit Fahrenheit value type Fuel { unit = Liter dimension = Fuel } unit Liter dimension Fuel } package sensors {
	component def FuelQualitySensorCP { }
	component def AirQuantitySensorCP { }
	component def CrankshaftRotationSensorCP { }
	component def WheelVelocitySensorCP { }
	component def EngineTemperatureSensorCP { }
	component def FuelLevelSensorCP { } } package components { import sensors ; import connectors ; using sensors.FuelLevelSensorCP ;
	component def EngineCP { }
	component def CarEletronicCentralCP { }
	component def EngineIgnitionDeviceCP { }
	component def BrakeSystemCP { } } Requirement TurnOnEngineFR ( 1 ) { text = "The system must turn on the engine when the engine ignition device is started" satisfied by components.EngineIgnitionDeviceCP ; } Requirement VerifyTemperatureFR ( 2 ) { text = "The system must be able to verify the engine temperature" satisfied by sensors.EngineTemperatureSensorCP ; Requirement IdentifyHighTemperatureFR ( 2.1 ) { text = "If the engine temperature is greater than 100, the system must warn that the car will be turned off in 2 minutes. This warning must be an alarm BIP and must be visual" satisfied by components.CarEletronicCentralCP ; } Requirement TurnOffCarHighTemperatureFR ( 2.2 ) { text = "Turn off the car 2 minutes after high temperature warning" satisfied by components.CarEletronicCentralCP ; } } Requirement ShowCarSystemInfoFR ( 4 ) { text = "The system must show temperature and fuel level statuses in a panel " satisfied by components.CarEletronicCentralCP ; } Requirement VerifyFuelLevelsFR ( 3 ) { text = "The system must be able to verify the fuel levels" satisfied by sensors.FuelLevelSensorCP ; Requirement VerifyLowFuelLevelsFR ( 3.1 ) { text = "If fuel level is under 2 lt, the system must warn that the car will be turned off in 2 minutes. This warning must be an alarm BIP and must be visual" satisfied by components.CarEletronicCentralCP ; } Requirement TurnOffCarLowFuelLevelsFR ( 3.2 ) { text = "Turn off the car 2 minutes after low fuel warning" satisfied by components.CarEletronicCentralCP ; } } package connectors { import ports ; connector def TemperatureCN { participants : ~ in1 : TemperatureIPT ; ~ out1 : TemperatureOPT ; flows : CelsiusTemperature from in1 to out1 } connector def FuelCN { participants : ~ out2 : FuelOPT ; ~ in2 : FuelIPT ; flows : Fuel from in2 to out2 } } package ports { import SysADL.types ; port def TemperatureIPT { flow in CelsiusTemperature } port def TemperatureOPT { flow out CelsiusTemperature } port def FuelIPT { flow in Fuel } port def FuelOPT { flow out Fuel } }